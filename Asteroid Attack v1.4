//BITMOJI CODE: MATT VELOSO:
var drawBitmoji = function(bodyX,bodyY,h){

var p = 80/h;
bodyX-=169/p;
bodyY-=210/p;
noStroke();

fill(255,224,189);//face
ellipse(bodyX+169/p,bodyY+169/p,(68/p),(68/p));
quad(bodyX+135/p,bodyY+(173/p),bodyX+(168/p),bodyY+(226/p),bodyX+(167/p),bodyY+(248/p),bodyX+(194/p),bodyY+(188/p));
//println(bodyX+100/p);
fill(112, 68, 1);//hair
quad(bodyX+(136/p),bodyY+(179/p), bodyX+(125/p), bodyY+(173/p), bodyX+(139/p), bodyY+(141/p), bodyX+(149/p), bodyY+(144/p));//left hair
quad(bodyX+(187/p), bodyY+(141/p), bodyX+(200/p), bodyY+(142/p), bodyX+(220/p), bodyY+(175/p), bodyX+(202/p), bodyY+(174/p));//right hair
triangle(bodyX+(139/p),bodyY+(140/p),bodyX+(169/p),bodyY+(154/p),bodyX+(198/p),bodyY+(138/p));
ellipse(bodyX+(170/p),bodyY+(138/p),(62/p),(21/p));

fill(255,224,189);//glasses
stroke(0, 0, 0);
ellipse(bodyX+(159/p),bodyY+(170/p),(20/p),(17/p));
ellipse(bodyX+(181/p),bodyY+(170/p),(20/p),(16/p));
line(bodyX+(167/p),bodyY+(169/p),bodyX+(173/p),bodyY+(169/p));
line(bodyX+(140/p),bodyY+(169/p),bodyX+(148/p),bodyY+(169/p));
line(bodyX+(191/p),bodyY+(169/p),bodyX+(198/p),bodyY+(169/p));

noStroke();
fill(255, 255, 255);//eyes
ellipse(bodyX+(159/p),bodyY+(169/p),(13/p),(12/p));
ellipse(bodyX+(181/p),bodyY+(169/p),(13/p),(12/p));
fill(0, 0, 0);//pupils
ellipse(bodyX+(160/p),bodyY+(169/p),(6/p),(5/p));
ellipse(bodyX+(182/p),bodyY+(169/p),(6/p),(5/p));

stroke(0, 0, 0);//nose
fill(255,224,189);
bezier(bodyX+(165/p),bodyY+(184/p),bodyX+(201/p),bodyY+(198/p),bodyX+(154/p),bodyY+(162/p),bodyX+(174/p),bodyY+(175/p));

arc(bodyX+(170/p),bodyY+(191/p),(21/p),(12/p),50,138);//mouth

fill(0, 0, 0);//shirt
quad(bodyX+(157/p),bodyY+(215/p),bodyX+(185/p),bodyY+(215/p),bodyX+(196/p),bodyY+(270/p),bodyX+(146/p),bodyY+(270/p));
fill(255, 255, 255);
textSize((15/p));
text("MV", bodyX+(159/p),bodyY+(241/p));
};

//Bitmoji Code: Matt McCune:
var drawBitmojiHead =function(hdX,hdY,bitmojiHeadHeight){
    var x=hdX;
    var y=hdY;
    var h=bitmojiHeadHeight/100;
noStroke();
fill(255,205,148);
ellipse(x+(h*9),y-(h*20),h*70,h*85); //head
fill(102, 66, 28);
arc(x+(h*9),y-(h*41),h*60,h*51,180,360); //center hair
rect(x-(h*19),y-(h*66),h*37,h*22,50);//hair2
fill(255, 255, 255);
fill(250, 240, 240);
ellipse(x+(h*25),y-(h*27),h*15,h*15);// left eye
ellipse(x-(h*5),y-(h*27),h*15,h*15);//righteye
fill(101, 67, 33);
ellipse(x+(h*25),y-(h*27),h*7,h*6);// left pupil
ellipse(x-(h*5),y-(h*27),h*7,h*6);// right pupil
stroke(0, 0, 0);
fill(255,205,148);
arc(x+(h*10),y-(h*1),h*31,h*13,0,180);
fill(207, 32, 230);
noStroke();
};

var drawBitmojiBody=function(bX,bY,bitmojiBodyHeight){
    var x=bX;
    var y=bY;
    var h=bitmojiBodyHeight/100;
quad(x-(h*50),y+(h*45),x-(h*17),y+(h*22),x+(h*30),y+(h*22),x+(h*66),y+(h*45));//shirt
rect(x-(h*50),y+(h*44),h*115,h*40,0);
stroke(255, 255, 255);
strokeWeight(5);
line(x-(h*20),y+(h*61),x-(h*20),y+(h*34));//|
line(x-(h*20),y+(h*34),x-(h*10),y+(h*61));//\
line(x-(h*10),y+(h*61),x,y+(h*34));///
line(x,y+(h*34),x,y+(h*61));//|
line(x+(h*15),y+(h*34),x+(h*15),y+(h*61));//|2
line(x+(h*25),y+(h*61),x+(h*15),y+(h*34));//\2
line(x+(h*35),y+(h*34),x+(h*25),y+(h*61));///2
line(x+(h*35),y+(h*61),x+(h*35),y+(h*34));//
};

var drawBitmojiSunglasses=function(sX,sY,bitmojiSunglassHeight){
    var x=sX;
    var y=sY;
    var h =bitmojiSunglassHeight/100; 
fill(31, 186, 217);
strokeWeight(1);
stroke(43, 35, 35);
ellipse(x-(h*5),y-(h*43),h*25,h*25);//sunglasses
ellipse(x+(h*24),y-(h*43),h*25,h*25);
strokeWeight(2);
line(x+(h*44),y-(h*28),x+(h*36),y-(h*41));
line(x-(h*25),y-(h*28),x-(h*17),y-(h*41));
};

var drawBitmojiMatt =function(x,y,h){
    drawBitmojiHead(x,y,h);
    drawBitmojiBody(x,y,h);
    drawBitmojiSunglasses(x,y,h);
};

//////////////////////////////////////////////////////////////////////////////////////////
//Global variables
var stillPlaying = 0;
var score = 0;
var highScore = 0;
var gameSpeed = 1;
frameRate(60);

//Button constructor
var Button = function(config) {
    this.x = config.x || 0;
    this.y = config.y || 0;
    this.width = config.width || 150;
    this.height = config.height || 50;
    this.label = config.label || "";
    this.onClick = config.onClick || function() {};
    this.textSize = textSize(50);
};

//draw method for buttons
Button.prototype.draw = function() {
    fill(212, 155, 32);
    stroke(0, 0, 0);
    rect(this.x, this.y, this.width, this.height);
    fill(0, 0, 0);
    //textFont(f,22);
    textAlign(LEFT, TOP);
    text(this.label, this.x+10, this.y+this.height/5);
};

//mouse inside method for buttons
Button.prototype.isMouseInside = function() {
    return mouseX > this.x &&
           mouseX < (this.x + this.width) &&
           mouseY > this.y &&
           mouseY < (this.y + this.height);
};

//mouse click method for buttons
Button.prototype.handleMouseClick = function() {
    if (this.isMouseInside()) {
        this.onClick();
    }
};

//Asteroid constructor
var asteroid = function(x, y) {
    this.x = x;
    this.y = y;                     
};

//Gem constructor
var gem = function(x, y) {
    this.x = x;
    this.y = y;
};

//Spaceship constructor
var spaceship = function ()
{
    this.x=0;
    this.y=0;
};

//draw method for asteroid
asteroid.prototype.draw = function() {
fill(135, 125, 116);
stroke(0, 0, 0);
rect(this.x,this.y,40,40,55);
fill(94, 94, 94);
noStroke();
rect(this.x+7,this.y+7,15,15,131);
rect(this.x+25,this.y+21,8,8,131);
rect(this.x+11,this.y+28,6,6,131);
};

//Gem draw method
gem.prototype.draw = function() {
    image(getImage("cute/GemBlue"),this.x,this.y,25,25);
};

//Spaceship draw method
spaceship.prototype.draw = function() {
noStroke();
this.x = mouseX - 10; 
this.y = mouseY - 15; 
//rocket body
fill(255, 255, 255);
rect(this.x, this.y, 20, 30);
//tip and wings
fill(255, 0, 0);
triangle(this.x, this.y, this.x + 10, this.y - 20, this.x + 20, this.y);
triangle(this.x - 10, this.y + 35, this.x, this.y + 10, this.x, this.y + 30);
triangle(this.x + 30, this.y + 35, this.x + 20, this.y + 10, this.x + 20, this.y + 30);
//window
fill(0, 157, 255);
ellipse(this.x + 10, this.y + 15, 10, 10);
//fire
fill(255, 166, 0);
triangle(this.x + 3, this.y + 30, this.x + 10, this.y + 60, this.x + 17, this.y + 30);

fill(255, 238, 0);
triangle(this.x + 6, this.y + 30, this.x + 10, this.y + 47, this.x + 13, this.y + 30);
};

var spaceship1 = new spaceship(this.x,this.y);

//background stars constructor 
var star = function(x,y) {
    this.x = x;
    this.y = y;
};

//draw method for background stars
star.prototype.draw = function() {
   fill(255, 255, 255);
   rect(this.x,this.y,5,5);   
};

//array to give values for star locations
var starArray = [];
for(var i = 0; i < 50; i++){
    starArray.push(new star(random (0,400), i * 8 - 40));
}

//background scene and drawing stars and moving them down the screen
var backgroundScene = function() {
    background(0, 0, 50);

    for (var i = 0; i < starArray.length; i++) {
        starArray[i].draw();
        starArray[i].y += gameSpeed;
        if (starArray[i].y > 400) {
            starArray[i].y = -10;
            starArray[i].x = random(0, 400);
        }
    }
};

//asteroids given random values and pushed into asteroid array
var asteroidArray = [];
for (var j = 0; j < 18; j++) {  
    asteroidArray.push(new asteroid(random(0, 400), j * 25 - 700));
}

//gems given random values and pushed into gem array
var gemArray = [];
for (var h = 0; h < 100; h++) {  
    gemArray.push(new gem(random(30, 370), h * 120 - 12000));
}

//start button 
var startButton = new Button({
    x: 128,
    y: 300,
    width: 148,
    height: 60,
    onClick: function() {
        stillPlaying = 1;
    }
});

//mouse clicked function
mouseClicked = function() {
    startButton.handleMouseClick();
};

//Home screen
var homeScreen = function () {
    fill(212, 155, 32);
    rect(30,45,341,57);
    fill(0, 0, 0);
    textSize(35);
    text("ASTEROID ATTACK",40,55);
    textSize(38);
    startButton.draw();
    text("START",142,308);
    drawBitmoji(70,300,62);
    drawBitmojiMatt(331,292,69);
    fill(212, 155, 32);
    rect(125,126,150,146);
    fill(0, 0, 0);
    textSize(23);
    text("How To Play", 136, 135);
    textSize(10);
    text("Use the mouse cursor to guide the spaceship through the asteroid field. Collect the gems to gain points. Each time you collect 5 points the spaceship will gain speed. Good luck!",131,172,150,200);
    
};

//Game active
var gameLive = function () {
    var collisionOccured = false;
    for (var a = 0; a < asteroidArray.length; a++) {
        asteroidArray[a].draw();
        asteroidArray[a].y += gameSpeed;
        //reset asteroids to top of the screen
        if (asteroidArray[a].y > 400) {
            asteroidArray[a].y = -50;
            asteroidArray[a].x = random(30, 370);
        }
        if (
            mouseX > asteroidArray[a].x &&
            mouseX < asteroidArray[a].x + 20 &&
            mouseY > asteroidArray[a].y &&
            mouseY < asteroidArray[a].y + 10
        ) 
        {
            collisionOccured = true;
        }
        if (collisionOccured) {stillPlaying = 3;}
    }
    //gem draw onto screen and increase speed
    for (var v = 0; v < gemArray.length; v++) {
        gemArray[v].draw();
        gemArray[v].y += gameSpeed;
        if (
            mouseX > gemArray[v].x &&
            mouseX < gemArray[v].x + 25 &&
            mouseY > gemArray[v].y &&
            mouseY < gemArray[v].y + 25
        ) 
        {
            score++;
            gemArray[v].y = -100; 
            gemArray[v].x = random(30, 370); 
        }
    }
    fill(252, 252, 252);
    //backdrop for pause text and score text
    fill(212, 155, 32);
    rect(0,0,400,20);
    //current spaceship drawing
    fill(255, 255, 255);
    spaceship1.draw(); 
    textSize(15);
    fill(0, 0, 0);
    text("CLICK SPACE BAR TO PAUSE",10,1);
    //text to display score on screen
    fill(0, 0, 0);
    text("Score: " + score, 331,1);
    if(score < 10)
    {
        gameSpeed = 1;
    }
    else if(score < 20  && score >= 10)
    {
        gameSpeed = 2;
    }
    else if(score < 30  && score >= 20)
    {
        gameSpeed = 3;
    }
    else if(score < 40  && score >= 30)
    {
        gameSpeed = 4;
    }
    else if(score < 50  && score >= 40)
    {
        gameSpeed = 5;
    }
    else if(score < 60  && score >= 50)
    {
        gameSpeed = 6;
    }
    else if(score < 70  && score >= 60)
    {
        gameSpeed = 7;
    }
    else
    {
        gameSpeed = 10;
    }
};

//Function to make game pause using spacebar
keyPressed = function () {
    if (key.code === 32 && stillPlaying === 1){
        stillPlaying = 2; 
    }
    else if (key.code === 32 && stillPlaying === 2){
        stillPlaying = 1;
    }
};

//Pause screen
var pauseScreen = function () {
    fill(212, 155, 32);
    rect(65, 115, 275, 100);
    fill(0, 0, 0);
    textSize(35);
    text("GAME PAUSED", 75,125);
    textSize(20);
    text("Press space to unpause", 100, 175);
};

//Game over screen
var gameOverScreen = function () {
    // game over sign
    fill(212, 155, 32);
    rect(50,50,300,75);
    fill(0, 0, 0);
    textSize(40);
    text("GAME OVER",77,66);
    //area to display score and highScore
    fill(212, 155, 32);
    rect(109,154,180,50);
    fill(0, 0, 0);
    textSize(20);
    text("Score: " + score,155,169);
    fill(212, 155, 32);
    rect(109,316,180,50);
    fill(0, 0, 0);
    textSize(15);
    text("Click restart to play again!",112,330);
    
};

//Draw function
draw = function() {
    if(stillPlaying === 0)
    {
        backgroundScene();
        homeScreen();
        score = 0;
    } 
    else if(stillPlaying === 1){
        backgroundScene();
        gameLive();
        
    }
    else if (stillPlaying === 2)
    {
        backgroundScene();
        pauseScreen();
    }
    else 
    {
        backgroundScene();
        gameOverScreen();
        gameSpeed = 1;
    }
};

/*
Notes: I removed the healthbar just to figure out how to get the collision working again. I changed the unpause to spacbar aswell and removed the restart button since it bugged the game.

Im gonna fix the gems cause i got to a score of about 50 and they disapreared so im going to make them roughly have the same logic as the asteroids and stars but just a bit of variation in where theyre being pushed in the y when they are redrawn

*/
